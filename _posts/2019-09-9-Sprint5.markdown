---
layout: post
title:  "Sprint #5 - 2 Week Length"
date:   2019-09-09 22:26:40 +1200
categories: sprints
---

**Project #2: Taking Steps**

**Author: Flinn Tiddy**

**Sprint Number: #5**

**Sprint length: 2 Weeks**

Sprint 5 is the final sprint before the 2 week break in the middle of semester of no classes. As per usual Joon and I had a meeting discussing the work we plan on doing this sprint. I wanted to get alot done this sprint so after holidays it would be a period of cleaning up our code and app to be ready to be presented on the Google Play Store and more importantly to Leon our client.

<br/><br/>
<br/><br/>

![](/assets/standup3.png)

Proof of stand up Mobile Team meeting.

<br/><br/>
<br/><br/>

![](/assets/startingtickets.jpg)

I choose to expand on my work from the previous sprint and continue to develop with Leons alogrithms as they are a core aspect of Taking Steps. I deciced I would create a "Last Activity Statistics" section on the home page of our app below the update weight section. This would take the users last activity whenever that be a walk or run and feed all the information such as distance, time and more into the equalations along with the users personal details like weight, height and age. The results would be displayed onto the home screen and automatically update everytime a new activity was completed. I also decided to work on validation for my new sign up page and also on the edit weight input on the home screen.

<br/><br/>
<br/><br/>

![](/assets/feature26.jpg)

Validation Needing Implemented: 

* Weight Update - Number Only.
* DOB Field Sign Up - YYYY-MM-DD Must be in exact format and be a real date.
* Height Field Sign Up - Number Only.
* Weight Field Sign Up - Number Only.
* Gender Field Sign Up - Male, male, M, m or Female, female, F, f.

Validation checking must be inforced on all these fields to stop using input fake or inncorrect information that could ruin their experience in the application. Feedback will need to be provided to the user via styling or alerts or both.

<br/><br/>
<br/><br/>

![](/assets/validationaddedtomethod.jpg)

Here I expanded upon my update weight method I created last sprint, I added a seperate validation check to ensure the users inputs a interger and nothing else. If the check passes it enters the update statement sending the new weight to firebase, if validation fails a alert box is displayed to the user letting them know they failed and need to try again.

<br/><br/>
<br/><br/>

![](/assets/weightborder.jpg) | ![](/assets/weightvalidation.jpg)

Above is a example of failing the validation check on the update weight section by using a string instead of a number. I created a seperate styling for the TextInput that I used to switch to with a tenary statement when the check fails. It creates a red border around the component in hope of helping the user realize where they have failed. The alert box also appears with more details to help educate the user on what they did wrong and how to fix their mistake. 

<br/><br/>
<br/><br/>

![](/assets/extraborder.jpg) | ![](/assets/extraalert.jpg)

I continued the same styling of validation onto the extra sign up page. This has now made my user feedback consistant throughout the application as it is now on three seperate pages. The same red border appears over the TextInput fails validation and the associated alert dialog appears instructing the user what format of information needed. In a future sprint less validation will be needed as I plan to replace the loose textinputs with dropdowns to better control the users inputs.

<br/><br/>
<br/><br/>

![](/assets/feature25.jpg)

I thought this feature was a excellent idea as it gave the user a quick snapshot of their most recent efforts which they could be proud of or could make them want to improve on their previous activity. To complete this ticktet I needed to gather up multiple different variables these included: 

* Users weight at time of activity.
* Exercise Time / Activity Time.
* Users age calculated from DOB.
* Users gender.
* Users height.
* Users BPM for activity.

<br/><br/>
<br/><br/>

![](/assets/agecalc.jpg)

I used npm to quickly install a new react native package to help my caluclate the age of the user due to the data being saved in YYYY-MM-DD format in firebase. The algorithm requied the age of the user in a normal format such as "21". This proves one of the benefits of using react native as I could quickly source a library from a third party to sovle this problem with zero hassle.

<br/><br/>
<br/><br/>

![](/assets/didmount.jpg)
![](/assets/lastactmath.jpg)

Above is two screenshots of the code responsible for calculating the last activity statistics. The code pulls weight, height and date of birth of the currently loggined in user into variables and sets their state. I then query firebase again pulling the most recent entry into "/activities" by using a limit to last to ensure its the newest record. I use the lasttimer field from the most recent activity but need to dividie it by 60000 to get it into decimal format due to it currently being in milliseconds. Weight and Height are also pulled from firebase. I then use the age calculator library to get the age from DOB of the user and set it into another const. The last step of this method is to set the state of calories, carbs and fat by using Leons algorithms. I had issues with implementing this feature because setState had a delay I didnt know about which was making the last statistics data display one activity behind.

<br/><br/>
<br/><br/>

![](/assets/calc.jpg)

Above is the screenshot of the calculations being displayed on the home screen. I need to work on the design of this next sprint but for now the core functionality is there and the results are accurate as I once again used a python complier and logged in to firebase to find and to test the values. I decided I will add a lifetime statistics section on the home page also.

<br/><br/>
<br/><br/>

![](/assets/mergerequest.jpg)
![](/assets/Milestone.jpg)

I improved upon my merge requests by adding the new features being added to the master branch to help Grayson understand the work I have completed for the sprint. Above is also proof of us using milestones to divide up tickets and get a good record of my progression. Grayson is once again assigned to this merge request to approve as he is acting as code review.

<br/><br/>
<br/><br/>

**Reflections:**

In my opinion this was a successful sprint from myself again adding a core feature to the application. Home screen needs some desgin work I plan to do over the holiday break. One of the final features to implement will be the goals system that we will start work on when class resumes. I believe a day, week and month goal system will be the best fit for Taking Steps. I've began to notice a few different bugs through the application that will need to be ironed out before we release to the public. I believe my team work and communication has been very good as I'm letting Joon know my progress on all tickets and asking if he needs any help on his own features.  